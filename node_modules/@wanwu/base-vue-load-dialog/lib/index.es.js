import 'core-js/modules/es.function.name';
import 'core-js/modules/es.object.assign';
import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';
import _createClass from '@babel/runtime/helpers/esm/createClass';
import Popup from '@wanwu/base-vue-popup';
import { getDownloadImage } from '@wanwu/canvas2image';
import Loading from '@wanwu/base-vue-loading';
import { ImageUtils } from '@wanwu/base-fn';
import { normalizeComponent, createInjector } from '@wanwu/vue-runtime-helpers';
import Vue from 'vue';
import { vmUnbindEvents, vmBindEvents } from '@wanwu/event-utils';

//
var script = {
  name: 'LoadDialog',
  components: {
    Popup: Popup,
    Loading: Loading
  },
  props: {
    src: String,
    showClose: Boolean,
    jumpUrl: String,
    value: Boolean,
    closeOnClickOverlay: {
      type: Boolean,
      "default": true
    },
    onImgClick: {
      type: Function
    }
  },
  data: function data() {
    return {
      imgIsLoad: false,
      isShowClose: false
    };
  },
  computed: {
    rectangleImage: function rectangleImage() {
      return this.getRectangleImageWithWidth(this.src, 800);
    }
  },
  created: function created() {
    this.loadImg();
  },
  methods: {
    getRectangleImageWithWidth: ImageUtils.getRectangleImageWithWidth,
    imgLoad: function imgLoad() {
      this.isShowClose = true;
    },
    imgClick: function imgClick() {
      this.$emit('imgClick');
      this.onImgClick && this.onImgClick();

      if (this.jumpUrl) {
        this.$location.push(this.jumpUrl);
      } else if (!this.showClose) {
        this.close();
      }
    },
    close: function close() {
      this.onInput(false);
    },
    onInput: function onInput(val) {
      this.$emit('input', val);
    },
    loadImg: function loadImg() {
      var _this = this;

      getDownloadImage(this.rectangleImage).then(function (res) {
        _this.imgIsLoad = true;
      })["catch"](function (err) {
        _this.$logError(err);
      });
    },
    onClosed: function onClosed() {
      this.$emit('closed');
    }
  }
};

/* script */
var __vue_script__ = script;
/* template */

var __vue_render__ = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('Popup', {
    staticClass: "component__LoadDialog LoadDialog",
    attrs: {
      "value": _vm.value,
      "close-on-click-overlay": _vm.closeOnClickOverlay
    },
    on: {
      "input": _vm.onInput,
      "closed": _vm.onClosed
    }
  }, [_vm.imgIsLoad ? _c('img', {
    staticClass: "mainImg",
    attrs: {
      "src": _vm.rectangleImage
    },
    on: {
      "click": _vm.imgClick,
      "load": _vm.imgLoad
    }
  }) : _c('div', {
    staticClass: "mainDiv flex f-ai-c f-jc-c"
  }, [_c('Loading', {
    staticClass: "Loading",
    attrs: {
      "size": 80
    }
  })], 1), _vm._v(" "), _vm.showClose && _vm.isShowClose ? _c('i', {
    staticClass: "w-iconfont w-icon-fenzux1 close",
    on: {
      "click": _vm.close
    }
  }) : _vm._e(), _vm._v(" "), _vm.imgIsLoad ? _vm._t("default") : _vm._e()], 2);
};

var __vue_staticRenderFns__ = [];
/* style */

var __vue_inject_styles__ = function __vue_inject_styles__(inject) {
  if (!inject) return;
  inject("data-v-659438ca_0", {
    source: ".component__LoadDialog .mainImg[data-v-659438ca]{width:7.48rem;display:block}.component__LoadDialog .mainDiv[data-v-659438ca]{width:7.48rem;height:8.6rem}.component__LoadDialog .close[data-v-659438ca]{color:#fff;font-size:.64rem;position:absolute;top:-.32rem;right:.4rem}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


var __vue_scope_id__ = "data-v-659438ca";
/* module identifier */

var __vue_module_identifier__ = undefined;
/* functional template */

var __vue_is_functional_template__ = false;
/* style inject SSR */

/* style inject shadow dom */

var __vue_component__ = normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, createInjector, undefined, undefined);

var Constructor = Vue.extend(__vue_component__);
var instance;
var cacheEvents;
var defaultOptions = {
  src: '',
  showClose: true,
  jumpUrl: '',
  closeOnClickOverlay: true,
  onImgClick: null
};

var LoadDialog = /*#__PURE__*/function () {
  function LoadDialog() {
    _classCallCheck(this, LoadDialog);
  }

  _createClass(LoadDialog, null, [{
    key: "show",
    value: function show(options) {
      var _this = this;

      if (!instance) {
        instance = new Constructor().$mount();
        document.body.appendChild(instance.$el);
        instance.$on('input', function (val) {
          instance.value = val;
        });
        instance.$on('closed', function () {
          vmUnbindEvents(instance, cacheEvents);
          cacheEvents = null;

          if (instance.removeFlag) {
            _this.remove();
          }
        });
      }

      instance.removeFlag = true;
      Object.assign(instance, defaultOptions);

      if (options) {
        if (typeof options === 'string') {
          Object.assign(instance, {
            src: options
          });
        } else if (options.props) {
          Object.assign(instance, options.props);
        } else {
          Object.assign(instance, options);
        }

        if (options.events) {
          cacheEvents = options.events;
          vmBindEvents(instance, cacheEvents);
        }
      } // if (typeof options.onImgClick === 'function') {
      //     instance.$on('imgClick', options.onImgClick);
      // }


      instance.value = true;
    }
  }, {
    key: "close",
    value: function close() {
      if (instance && instance.value) {
        instance.value = false;
      }
    }
  }, {
    key: "remove",
    value: function remove() {
      if (instance) {
        var parent = instance.$el.parentNode;

        if (parent) {
          parent.removeChild(instance.$el);
        }

        instance.$destroy();
      }

      instance = null;
    }
  }]);

  return LoadDialog;
}();

__vue_component__.install = function (Vue) {
  Vue.component(__vue_component__.name, __vue_component__);
  Vue.prototype.$loadDialog = LoadDialog;
  Vue.loadDialog = LoadDialog;
};

export default __vue_component__;
export { LoadDialog };
