import comp from './index.vue';
import Vue from 'vue';
import {
    vmBindEvents, vmUnbindEvents,
} from '@wanwu/event-utils';
const DialogConstructor = Vue.extend(comp);
let instance;
let cacheEvents;
const initInstance = () => {
    if (!instance) {
        instance = new DialogConstructor().$mount();
        instance.$on('input', (val) => {
            instance.value = val;
        });
        instance.$on('closed', () => {
            vmUnbindEvents(instance, cacheEvents);
            cacheEvents = null;
            Dialog.remove();
        });
        document.body.appendChild(instance.$el);
    }
};
class Dialog {
    static alert(options) {
        initInstance();
        const defaultOptions = {
            message: '',
            title: '',
            confirmButtonText: '知道了',
            value: false,
            showConfirmButton: true,
            showCancelButton: false,
            cancelButtonText: '取消',
            cancelButtonColor: '#737373',
            confirmButtonColor: '#007aff',
            overlay: true,
            closeOnClickOverlay: false,
            beforeClose: null,
            width: 560,
            offsetTop: null,
        };
        return new Promise((resolve) => {
            Object.assign(instance, defaultOptions);
            if (options) {
                if (typeof options === 'string') {
                    Object.assign(instance, {
                        message: options,
                    });
                } else if (options.props) {
                    Object.assign(instance, options.props);
                } else {
                    Object.assign(instance, options);
                }
                if (options.events) {
                    cacheEvents = options.events;
                    vmBindEvents(instance, cacheEvents);
                }
            }
            instance.$once('confirm', () => {
                resolve();
            });
            instance.value = true;
        });
    }

    static confirm(options) {
        initInstance();
        const defaultOptions = {
            message: '',
            title: '',
            confirmButtonText: '确认',
            value: false,
            showConfirmButton: true,
            showCancelButton: true,
            cancelButtonText: '取消',
            cancelButtonColor: '#737373',
            confirmButtonColor: '#007aff',
            overlay: true,
            closeOnClickOverlay: false,
            beforeClose: null,
            width: 560,
            offsetTop: null,
        };
        return new Promise((resolve, reject) => {
            if (typeof options === 'string') {
                Object.assign(instance, defaultOptions, {
                    message: options,
                });
            } else if (options.props) {
                Object.assign(instance, defaultOptions, options.props);
            } else {
                Object.assign(instance, defaultOptions, options);
            }
            if (options.events) {
                cacheEvents = options.events;
                vmBindEvents(instance, cacheEvents);
            }
            instance.$once('confirm', () => {
                resolve();
            });
            instance.$once('cancel', () => {
                reject(new Error('弹窗组件取消'));
            });
            instance.value = true;
        });
    }

    static remove() {
        if (instance) {
            const parent = instance.$el.parentNode;
            if (parent) {
                parent.removeChild(instance.$el);
            }

            instance.$destroy();
        }
        instance = null;
    }

    static close() {
        if (instance) {
            instance.value = false;
        }
    }
}


comp.install = (Vue) => {
    Vue.component(comp.name, comp);
    Vue.prototype.$dialog = Dialog;
    Vue.dialog = Dialog;
};
export {
    Dialog,
};

export default comp;
