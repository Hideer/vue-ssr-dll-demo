/*
 * @Author: 锦阳
 * @Create: 2020年12月02日
 */
import { fn, ua } from '@wanwu/base-fn';

// APP环境，__env=development下才会进行addHeader的操作
/** 是否是开发模式  */
export const isDevelopment = process.env.NODE_ENV === 'development';
/** 是否是在app内 */
export const isAPP = ua.getAppName() === 'wwdz_b2b' || fn.isLargerThanAppVersion('2.7.7');
/** 是否在app的弹窗内 */
export const isEmbed = fn.getQueryString('isEmbed');
/** 是否需要展示app头部 */
export const needShowAppHeader = (isAPP || isDevelopment) && !isEmbed;

let _listener = () => {};
if (needShowAppHeader) {
    const title = document.querySelector('head>title');
    // 选择需要观察变动的节点
    const targetNode = title;

    // 观察器的配置（需要观察什么变动）
    const config = { attributes: true, childList: true, subtree: true };

    // 当观察到变动时执行的回调函数
    const callback = function () {
        // Use traditional 'for loops' for IE 11
        if (typeof _listener === 'function') { _listener(); }
    };

    // 创建一个观察器实例并传入回调函数
    const observer = new MutationObserver(callback);

    // 以上述配置开始观察目标节点
    observer.observe(targetNode, config);
}

/**
 *  监听title改动
 * @param {(title:string)=>void} handler 监听函数
 * @param {object} options 监听配置选项
 * @param {boolean} options.immediate 是否在初始化监听时触发
 */
export function watchDocumentTitle(handler, { immediate }) {
    typeof handler === 'function' && immediate && handler();
    _listener = handler;
}
