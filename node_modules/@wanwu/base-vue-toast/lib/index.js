'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

require('core-js/modules/es.function.name');
require('core-js/modules/es.object.assign');
var Vue = _interopDefault(require('vue'));
require('core-js/modules/es.number.constructor');
require('core-js/modules/web.timers');
var popup = _interopDefault(require('@wanwu/base-vue-popup'));
var vueRuntimeHelpers = require('@wanwu/vue-runtime-helpers');
var eventUtils = require('@wanwu/event-utils');

var script = {
  name: 'Toast',
  components: {
    popup: popup
  },
  props: {
    value: {
      type: Boolean,
      "default": false
    },
    message: {
      type: String,
      "default": ''
    },
    mask: {
      type: Boolean,
      "default": false
    },
    closeOnClickOverlay: {
      type: Boolean,
      "default": false
    },
    position: {
      type: String,
      "default": ''
    },
    duration: {
      type: Number,
      "default": 1500
    },
    contentStyle: {
      type: [Object, String]
    },
    contentClass: {
      type: [Object, String]
    },
    callback: {
      type: Function
    }
  },
  data: function data() {
    return {
      timer: null
    };
  },
  watch: {
    value: function value(val) {
      this.show = val;
      this.autoClose();
    }
  },
  created: function created() {
    this.autoClose();
  },
  methods: {
    close: function close() {
      this.onInput(false);
      this.$emit('close');
      this.callback && this.callback();
    },
    closed: function closed() {
      this.$emit('closed');
    },
    autoClose: function autoClose() {
      var _this = this;

      if (this.timer) {
        clearTimeout(this.timer);
      }

      if (this.value && this.duration) {
        this.timer = setTimeout(function () {
          _this.close();
        }, this.duration);
      }
    },
    onInput: function onInput(val) {
      this.$emit('input', val);
    }
  }
};

/* script */
var __vue_script__ = script;
/* template */

var __vue_render__ = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('popup', {
    staticClass: "components__toast toast",
    attrs: {
      "value": _vm.value,
      "overlay": _vm.mask,
      "close-on-click-overlay": _vm.closeOnClickOverlay,
      "position": _vm.position,
      "slot-style": {
        zIndex: '4001'
      }
    },
    on: {
      "input": _vm.onInput,
      "closed": function closed($event) {
        return _vm.closed($event);
      }
    }
  }, [_c('div', {
    staticClass: "toast__content",
    "class": _vm.contentClass,
    style: _vm.contentStyle
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.message))])], 2)]);
};

var __vue_staticRenderFns__ = [];
/* style */

var __vue_inject_styles__ = function __vue_inject_styles__(inject) {
  if (!inject) return;
  inject("data-v-bf02a94a_0", {
    source: ".toast__content[data-v-bf02a94a]{padding:.3rem;background-color:rgba(50,50,51,.88);color:#fff;font-size:.26rem;line-height:.4rem;border-radius:.16rem;justify-content:center;text-align:center;max-width:6.8rem;white-space:normal;overflow:hidden}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


var __vue_scope_id__ = "data-v-bf02a94a";
/* module identifier */

var __vue_module_identifier__ = undefined;
/* functional template */

var __vue_is_functional_template__ = false;
/* style inject SSR */

/* style inject shadow dom */

var __vue_component__ = vueRuntimeHelpers.normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, vueRuntimeHelpers.createInjector, undefined, undefined);

var constructor = Vue.extend(__vue_component__);
var instance;
var defaultOptions = {
  duration: 1500,
  message: '',
  position: '',
  mask: false,
  closeOnClickOverlay: false,
  contentStyle: null,
  contentClass: null,
  callback: null
};
var cacheEvents;

var toast = function toast() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (!instance) {
    instance = new constructor().$mount();
    document.body.appendChild(instance.$el);
    instance.$on('input', function (val) {
      instance.value = val;
    });
    instance.$on('closed', function () {
      eventUtils.vmUnbindEvents(instance, cacheEvents);
      cacheEvents = null;
    });
  }

  Object.assign(instance, defaultOptions);

  if (options) {
    if (typeof options === 'string') {
      Object.assign(instance, {
        message: options
      });
    } else {
      if (options.props) {
        Object.assign(instance, options.props);
      } else {
        Object.assign(instance, options);
      }

      if (options.events) {
        cacheEvents = options.events;
        eventUtils.vmBindEvents(instance, cacheEvents);
      }
    }
  }

  if (instance.value) {
    instance.autoClose();
  } else {
    instance.value = true;
  }

  return instance;
};

__vue_component__.install = function (Vue) {
  Vue.component(__vue_component__.name, __vue_component__);
  Vue.prototype.$toast = toast;
  Vue.toast = toast;
};

exports.default = __vue_component__;
exports.toast = toast;
