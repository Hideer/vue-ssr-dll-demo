import Vue from 'vue';
import comp from './index.vue';
import {
    vmUnbindEvents, vmBindEvents,
} from '@wanwu/event-utils';
const constructor = Vue.extend(comp);
let instance;
const defaultOptions = {
    duration: 1500,
    message: '',
    position: '',
    mask: false,
    closeOnClickOverlay: false,
    contentStyle: null,
    contentClass: null,
    callback: null,
};
let cacheEvents;
const toast = (options = {}) => {
    if (!instance) {
        instance = new constructor().$mount();
        document.body.appendChild(instance.$el);
        instance.$on('input', (val) => {
            instance.value = val;
        });
        instance.$on('closed', () => {
            vmUnbindEvents(instance, cacheEvents);
            cacheEvents = null;
        });
    }
    Object.assign(instance, defaultOptions);
    if (options) {
        if (typeof options === 'string') {
            Object.assign(instance, {
                message: options,
            });
        } else {
            if (options.props) {
                Object.assign(instance, options.props);
            } else {
                Object.assign(instance, options);
            }
            if (options.events) {
                cacheEvents = options.events;
                vmBindEvents(instance, cacheEvents);
            }
        }
    }
    if (instance.value) {
        instance.autoClose();
    } else {
        instance.value = true;
    }
    return instance;
};
comp.install = (Vue) => {
    Vue.component(comp.name, comp);
    Vue.prototype.$toast = toast;
    Vue.toast = toast;
};
export {
    toast,
};
export default comp;
