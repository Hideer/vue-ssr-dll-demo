import 'core-js/modules/es.array.for-each';
import 'core-js/modules/es.array.is-array';
import 'core-js/modules/es.array.map';
import 'core-js/modules/es.function.name';
import 'core-js/modules/es.object.assign';
import 'core-js/modules/es.object.keys';
import 'core-js/modules/es.regexp.exec';
import 'core-js/modules/web.dom-collections.for-each';
import 'core-js/modules/web.timers';
import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';
import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';
import _createClass from '@babel/runtime/helpers/esm/createClass';
import 'core-js/modules/es.array.concat';
import 'core-js/modules/es.array.filter';
import 'core-js/modules/es.array.index-of';
import 'core-js/modules/es.number.constructor';
import 'core-js/modules/es.object.to-string';
import 'core-js/modules/es.parse-int';
import 'core-js/modules/es.promise';
import 'core-js/modules/es.promise.finally';
import 'core-js/modules/es.string.replace';
import 'core-js/modules/es.string.link';
import 'regenerator-runtime/runtime';
import _asyncToGenerator from '@babel/runtime/helpers/esm/asyncToGenerator';
import _regeneratorRuntime from '@babel/runtime/regenerator';
import popup from '@wanwu/base-vue-popup';
import Occupying from '@wanwu/base-vue-occupying';
import { ua, fn } from '@wanwu/base-fn';
import Share from '@wanwu/base-share';
import copyText from '@wanwu/copy-text';
import Dialog from '@wanwu/base-vue-dialog';
import hdp from '@wanwu/hdp';
import User from '@wanwu/base-user';
import { activeGoodsType } from '@wanwu/resource-center';
import { toast } from '@wanwu/base-vue-toast';
import { logE } from '@wanwu/base-logger';
import mySentry from '@wanwu/sentry';
import request from '@wanwu/base-request';
import { normalizeComponent, createInjector } from '@wanwu/vue-runtime-helpers';
import Vue from 'vue';
import { drawImage } from '@wanwu/canvas2image';
import { vmUnbindEvents, vmBindEvents } from '@wanwu/event-utils';

var logError = mySentry.logError;
var script = {
  name: 'ShareDialog',
  components: {
    popup: popup,
    Occupying: Occupying,
    Dialog: Dialog
  },
  props: {
    isHide: {
      type: Boolean,
      "default": false
    },
    // 分享海报的宽度
    imageWitdh: {
      type: Number
    },

    /**
     * Promise Function resolve canvasConfig<br/>
     * 对应的canvasConfig规则可以参考<br/>canvas2image的文档<br/>
     * http://fe-material.wanwudezhi.work/?key=2&keypath=2-4<br/>
     * 或者 http://npm.wanwudezhi.com/package/@wanwu/canvas2image<br/>
     */
    initCanvasConfig: {
      type: Function
    },
    // 弹窗显示隐藏
    value: {
      type: Boolean
    },

    /**
     * 底部分享按钮，一共支持这几个key：<br/>
     * wxim(分享好友)<br/>
     * yjfq(一键发圈)<br/>
     * qq(分享到QQ)<br/>
     * wb(分享到微博)<br/>
     * hbfq(多图发圈，特定场景，一般没用)<br/>
     * saveImg(保存图片)<br/>
     * h5saveImg(h5保存图片提示)
     * copy(复制链接--默认复制 `标题加链接`)
     * **每一个key的值可以是`boolean`，true展示该按钮，false隐藏，如果是微信分享相关的，可以支持接受number类型的值**<br/>
     * 对应的类型来自于微信开放文档的mediaType<br/>
     * mediaType 0 文字类型 1 图片类型 2 音乐类型 3 视频类型 4 网页类型 5 小程序类型<br/>
     * 可以查看文档的**PluginShare - wechat**相关内容 http://wiki.wanwudezhi.work/pages/viewpage.action?pageId=329065<br/>
     * 分享相关的所有功能，除了复制链接，其他功能只支持app内使用
     */
    showBtn: {
      type: Object,
      "default": function _default() {
        return {
          wxim: 4,
          // 分享好友
          yjfq: ua.isApp() && 4,
          // 一件发圈
          copy: true,
          // 复制链接
          saveImg: true,
          // '保存图片' : '生成海报',
          qq: ua.isApp() && fn.compareVersion(ua.getAppVersion(), '2.5.1') >= 0,
          // 分享qq
          wb: ua.isApp() && fn.compareVersion(ua.getAppVersion(), '2.5.1') >= 0,
          // 分享weibo ,
          h5saveImg: !ua.isApp() // h5保存图片提示

        };
      }
    },
    // 是否展示顶部海报图片
    showTopShareImg: {
      type: Boolean
    },
    // 分享配置对象，相关配置可以查看@wanwu/base-share<br/>
    // http://npm.wanwudezhi.com/package/@wanwu/base-share<br/>
    // 未完成，待补充<br/>
    shareObj: {
      type: Object
    },

    /**
     * dialogImg
     * H5在微信环境下分享微信好友时的提示图片
     */
    dialogImg: {
      type: String,
      "default": 'https://cdn.wanwudezhi.com/static/web-static/image/d18d05232f2e678babc1b1e530d20a8e.png'
    },
    shareImgStyle: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },

    /**
     * 额外参数（社区用的，一般不建议使用）<br/>
     * `Function` extraParams.emitEventsFn 用户点击底部按钮后触发，触发时机和`shareComplete`事件一样，建议使用shareComplete<br/>
     * `string|number` extraParams.shareWayVal 用户点击底部分享按钮后上报埋点参数（shareWay）<br/>
     * `Object` extraParams.shareExtra 小程序分享参数，小程序/webview/share页面接收的参数，只有shareTaskType<br/>
     * `string` extraParams.shareExtra.shareTaskType 小程序分享参数，小程序/webview/share页面接收的参数<br/>
     */
    extraParams: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    // 引导提示的文案
    tipText: {
      type: String
    },
    // 引导提示对应的背景图片<br/>
    // {string} url 图片链接<br/>
    // {number} width 图片宽度<br/>
    // {number}  height 图片高度<br/>
    tipImg: {
      type: Object,
      "default": function _default() {
        return {
          url: 'https://cdn.wanwudezhi.com/static/web-static/image/5c0d3a7d8f2e982b000cba89ca38555b_750x80.png',
          width: 750,
          height: 80
        };
      }
    },
    // 是否展示引导提示
    showTip: {
      type: Boolean
    }
  },
  data: function data() {
    return {
      clickIcon: 'https://cdn.wanwudezhi.com/static/web-static/image/f186aa02245da380291c3568caedb213.png',
      image: null,
      dialogTitle: '点击“…”，选择【发送给朋友】或【分享到朋友圈】',
      showDialog: false,
      overlay: true,
      shareIcon: 'https://cdn.wanwudezhi.com/seller-admin/image/MTU1MjI4ODk3MTMwNA==.png',
      // dialogImg: 'https://cdn.wanwudezhi.com/static/web-static/image/d18d05232f2e678babc1b1e530d20a8e.png',
      qqdialogImg: 'https://cdn.wanwudezhi.com/static/web-static/image/3371d73466c0bca889d8da328f8d18dd_705x738.png',
      weibodialogImg: 'https://cdn.wanwudezhi.com/static/web-static/image/44d488ca5b1f4c9c68286a42146bfd34_705x738.png',
      isIphoneX: ua.isIPhoneX(),
      isApp: ua.isApp(),
      // promiseList: [],
      shareLinkShort: '',
      config: null,
      progress: 0,
      isShowLoading: false,
      // imgClass: 'widthFull',
      // shareImgWidth:
      // 避免created和watch里面的getShortChain重复调用
      isCreated: false,
      containerHeight: null,
      isQQInstalled: false,
      isWeiboInstalled: false
    };
  },
  computed: {
    cntShareObj: function cntShareObj() {
      return Share.getCacheShareOptions(this.shareObj);
    },
    isShow: function isShow() {
      return !this.checkIsProcessToWechatMiniProgram();
    },
    btnListObj: function btnListObj() {
      var qqDisabledIcon = 'https://cdn.wanwudezhi.com/static/web-static/image/a5df314282c79e41aed71ef76625b14f_162x162.png';
      var qqEnabledIcon = 'https://cdn.wanwudezhi.com/static/web-static/image/5c060508ffaca870546c1d3616d268b6_162x162.png';
      var wbDisabledIcon = 'https://cdn.wanwudezhi.com/static/web-static/image/9e5101ebe824038430fc930d3811ab61_162x162.png';
      var wbEnabledIcon = 'https://cdn.wanwudezhi.com/static/web-static/image/49f12b068a29232789ef9c1f94cd8318_162x162.png';
      return {
        wxim: {
          key: 'wxim',
          icon: 'https://cdn.wanwudezhi.com/static/web-static/image/7aaa81734c4cc9812dbb9968a47e1379_112x112.png',
          text: '微信好友',
          method: this.shareFriend
        },
        yjfq: {
          key: 'yjfq',
          icon: 'https://cdn.wanwudezhi.com/static/web-static/image/c7eac16c4b6f0f125da1edc5f9bcf254_112x112.png',
          text: '朋友圈',
          method: this.shareMoment
        },
        qq: {
          key: 'qq',
          icon: this.isQQInstalled ? qqEnabledIcon : qqDisabledIcon,
          text: 'QQ',
          method: this.shareToQQ
        },
        wb: {
          key: 'wb',
          icon: this.isWeiboInstalled ? wbEnabledIcon : wbDisabledIcon,
          text: '微博',
          method: this.shareToWeibo
        },
        // 海报发圈
        hbfq: {
          key: 'hbfq',
          icon: 'https://cdn.wanwudezhi.com/static/web-static/image/1ff5d23aeb088e72d4ae96ee9be2a70e_112x112.png',
          text: '海报发圈',
          method: this.createPost
        },
        saveImg: {
          key: 'saveImg',
          icon: 'https://cdn.wanwudezhi.com/static/web-static/image/f336e9a732b2260d40b3403d1fbe086e_112x112.png',
          text: ua.isApp() ? '保存图片' : '生成海报',
          method: this.saveImg
        },
        h5saveImg: {
          key: 'h5saveImg',
          icon: 'https://cdn.wanwudezhi.com/static/web-static/image/f336e9a732b2260d40b3403d1fbe086e_112x112.png',
          text: '保存图片',
          method: this.toastSave
        },
        copy: {
          key: 'copy',
          icon: 'https://cdn.wanwudezhi.com/static/web-static/image/d61e70204a951f43aeffd52ffb8df6e6_112x112.png',
          text: '复制链接',
          method: this.copyLink
        }
      };
    },
    // 控制样式， shareBtn > 3时，设置btnItem 宽度25%， 换行
    shareBtnClass: function shareBtnClass() {
      var _this = this;

      var showBtn = Object.keys(this.showBtn).filter(function (key) {
        return _this.showBtn[key];
      });

      if (showBtn.length > 4) {
        return 'btnItemGreater4';
      } else {
        return 'btnItemLess4';
      }
    }
  },
  watch: {
    initCanvasConfig: function initCanvasConfig() {
      this.image = null;
      this.shareLinkShort = null;
      this.progress = 0;
      this.config = null;
    },
    value: function value(val) {
      if (val && this.checkIsProcessToWechatMiniProgram()) {
        this.processToWechatMiniProgram();
      } else {
        if (val && this.showTopShareImg) {
          this.drawImage();
        }

        if (val && !this.shareLinkShort && !this.isCreated) {
          this.getShortChain();
        }
      }
    }
  },
  created: function created() {
    var _this2 = this;

    if (this.value && this.checkIsProcessToWechatMiniProgram()) {
      this.processToWechatMiniProgram();
    } else if (this.value && this.showTopShareImg) {
      this.drawImage();
    }

    this.$nextTick(function () {
      _this2.getShortChain();
    });
    this.isCreated = true;

    if (ua.isApp()) {
      this.judgeQQandWeiboShareChannel();
    }

    if (ua.isQQ()) {
      this.dialogImg = this.qqdialogImg;
    }

    if (ua.isWeibo()) {
      this.dialogImg = this.weibodialogImg;
    }
  },
  methods: {
    // h5保存提示
    toastSave: function toastSave() {
      this.$emit('h5saveImg');
      this.$toast('请长按保存海报');
    },
    // 判断是否安装qq，weibo, 添加对应的分享渠道
    judgeQQandWeiboShareChannel: function judgeQQandWeiboShareChannel() {
      var _this3 = this;

      try {
        hdp.execRequest('PluginShare', 'isQQInstalled').then(function (res) {
          _this3.isQQInstalled = res;
        });
        hdp.execRequest('PluginShare', 'isWeiboInstalled').then(function (res) {
          _this3.isWeiboInstalled = res;
        });
      } catch (e) {
        console.log(e);
      }
    },
    onClosed: function onClosed() {
      // 弹窗关闭动画结束后
      this.$emit('closed');
    },
    extraFsEmit: function extraFsEmit() {
      if (this.extraParams.emitEventsFn) this.extraParams.emitEventsFn();
    },
    popupInput: function popupInput(val) {
      // 弹窗显示隐藏状态修改，配合value实现v-module
      // @arg {boolean} value 弹窗显示隐藏状态
      this.$emit('input', val);

      if (!val) {
        this.showDialog = false;
      }
    },
    logShare: function logShare(_ref) {
      var shareTitle = _ref.shareTitle,
          link = _ref.link;
      logE(30008, {
        shareTitle: shareTitle,
        shareUrl: link,
        shareParameter: '',
        shareWay: this.extraParams.shareWayVal || 0
      });
      logE('share', {
        shareTitle: shareTitle,
        shareUrl: link,
        shareParameter: '',
        shareWay: this.extraParams.shareWayVal || 0
      });
    },
    // 复制链接
    copyLink: function copyLink() {
      var shareTitle = 'copy';
      var link = this.genShareLink({
        shareTitle: shareTitle,
        needTitle: true,
        "short": true
      });
      this.logShare({
        shareTitle: shareTitle,
        link: link
      });
      copyText(link).then(function (res) {
        toast('链接复制成功');
      })["catch"](function (err) {
        toast(err.message);
      });
      /**
       * 用户点击底部分享按钮后触发
       * @arg {string} action 用户点击的分享按钮类型
       */

      this.$emit('shareComplete', 'copyLink');
      this.extraFsEmit();
    },
    // 分享好友
    shareFriend: function shareFriend(type) {
      var shareTitle = 'wxim';
      var link = this.genShareLink({
        shareTitle: shareTitle
      });

      if (ua.isApp()) {
        if (type && typeof type === 'boolean') {
          type = 4;
        }

        this.shareToWx({
          scene: 0,
          mediaType: type,
          shareType: shareTitle
        });
      } else {
        this.showDialog = true;
      }

      this.logShare({
        shareTitle: shareTitle,
        link: link
      });
      this.$emit('shareComplete', 'friend');
      this.extraFsEmit();
    },
    // 分享朋友圈
    shareMoment: function shareMoment(type) {
      var shareTitle = 'yjfq';
      var text = this.genShareLink({
        shareTitle: shareTitle,
        needTitle: true
      });
      var link = this.genShareLink({
        shareTitle: shareTitle
      });

      if (ua.isApp()) {
        if (type && typeof type === 'boolean') {
          type = 4;
        }

        copyText(text).then(function (res) {// toast('链接已复制');
        })["catch"](function (err) {
          toast(err.message);
        });
        this.shareToWx({
          scene: 1,
          mediaType: type,
          shareType: shareTitle
        });
        this.$emit('shareComplete', 'moment');
        this.extraFsEmit();
      } else {
        this.showDialog = true;
      }

      this.logShare({
        shareTitle: shareTitle,
        link: link
      });
    },
    shareImgShow: function shareImgShow() {
      // this.image = val;
      this.popupInput(false);
    },
    // 保存图片
    saveImg: function saveImg() {
      var shareTitle = 'saveImg';
      var link = this.genShareLink({
        shareTitle: shareTitle
      });

      if (ua.isApp() && this.image) {
        this.$share.downloadImageByHdp(this.image, this);
      }

      this.$emit('shareComplete', 'saveImage');
      this.extraFsEmit();
      this.logShare({
        shareTitle: shareTitle,
        link: link
      });
    },
    shareToWx: function () {
      var _shareToWx = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {
        var scene, mediaType, shareType, text, link, miniName, res, shareObj, canTailoring, imgUrl;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                scene = _ref2.scene, mediaType = _ref2.mediaType, shareType = _ref2.shareType;
                text = this.genShareLink({
                  shareTitle: shareType,
                  needTitle: true
                });
                link = this.genShareLink({
                  shareTitle: shareType
                });

                if (!ua.isApp()) {
                  _context.next = 18;
                  break;
                }

                _context.prev = 4;
                _context.next = 7;
                return activeGoodsType();

              case 7:
                res = _context.sent;
                miniName = res.miniName;
                _context.next = 14;
                break;

              case 11:
                _context.prev = 11;
                _context.t0 = _context["catch"](4);
                miniName = 'gh_1cc1b1adba60';

              case 14:
                shareObj = this.cntShareObj;
                canTailoring = shareObj.imgUrl.indexOf('cdn.wanwudezhi') > -1 && !(ua.isIOSApp() && shareObj.imgUrl.indexOf('vframe') > -1);
                imgUrl = canTailoring ? this.getRectangleImage(shareObj.imgUrl, {
                  cut: true,
                  width: 500,
                  height: mediaType === 5 ? 400 : 500
                }) : shareObj.imgUrl; // 调用app接口

                return _context.abrupt("return", hdp.exec('PluginShare', 'wechat', {
                  scene: scene,
                  // 分享场景
                  text: text,
                  // 发送消息的文本内容
                  title: shareObj.title,
                  // 消息标题
                  description: shareObj.desc,
                  // 消息描述
                  thumbData: imgUrl,
                  // 缩略图
                  mediaType: mediaType,
                  // 分享媒体消息类型
                  mediaObject: {
                    imageData: this.image,
                    // 根据微信开放平台文档里的媒体消息类型
                    webpageUrl: link,
                    // 兼容低版本的网页链接
                    userName: miniName || 'gh_1cc1b1adba60',
                    // 小程序的userName
                    path: '/pages' + shareObj.page + '?' + shareObj.queryStr,
                    // 小程序的页面路径
                    withShareTicket: true,
                    // 是否使用带shareTicket的分享(详情见微信开放平台文档)
                    miniprogramType: parseInt(fn.getQueryString('__miniprogramType')) || 0,
                    // 小程序的类型
                    hdImageData: imgUrl
                  }
                }));

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[4, 11]]);
      }));

      function shareToWx(_x) {
        return _shareToWx.apply(this, arguments);
      }

      return shareToWx;
    }(),
    // 分享到qq
    shareToQQ: function () {
      var _shareToQQ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
        var _this$cntShareObj, title, desc, imgUrl, shareTitle, link, thumbData;

        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.isQQInstalled) {
                  _context2.next = 3;
                  break;
                }

                this.$toast('当前设备未检测到QQ');
                return _context2.abrupt("return");

              case 3:
                _this$cntShareObj = this.cntShareObj, title = _this$cntShareObj.title, desc = _this$cntShareObj.desc, imgUrl = _this$cntShareObj.imgUrl;
                shareTitle = 'qq';
                link = this.genShareLink({
                  shareTitle: shareTitle
                }); // const shareUrl = fn.setQueryString(link, 'shareTitle', 'qq');
                // qq不支持webp格式图片，兼容

                thumbData = imgUrl.indexOf('webp') > -1 ? imgUrl.replace('webp', '') : imgUrl;
                _context2.prev = 7;
                _context2.next = 10;
                return hdp.exec('PluginShare', 'qq', {
                  title: title,
                  desc: desc,
                  thumbData: thumbData,
                  webpageUrl: link
                });

              case 10:
                _context2.next = 15;
                break;

              case 12:
                _context2.prev = 12;
                _context2.t0 = _context2["catch"](7);
                console.log(_context2.t0);

              case 15:
                this.$emit('shareComplete', 'qq');
                this.extraFsEmit();
                this.logShare({
                  shareTitle: shareTitle,
                  link: link
                });

              case 18:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[7, 12]]);
      }));

      function shareToQQ() {
        return _shareToQQ.apply(this, arguments);
      }

      return shareToQQ;
    }(),
    // 分享到微博
    shareToWeibo: function () {
      var _shareToWeibo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
        var _this$cntShareObj2, title, desc, imgUrl, shareTitle, link;

        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (this.isWeiboInstalled) {
                  _context3.next = 3;
                  break;
                }

                this.$toast('当前设备未检测到微博');
                return _context3.abrupt("return");

              case 3:
                _this$cntShareObj2 = this.cntShareObj, title = _this$cntShareObj2.title, desc = _this$cntShareObj2.desc, imgUrl = _this$cntShareObj2.imgUrl;
                shareTitle = 'wb';
                link = this.genShareLink({
                  shareTitle: shareTitle
                });
                _context3.prev = 6;
                _context3.next = 9;
                return hdp.exec('PluginShare', 'weibo', {
                  title: title,
                  desc: desc,
                  thumbData: imgUrl,
                  webpageUrl: link
                });

              case 9:
                _context3.next = 14;
                break;

              case 11:
                _context3.prev = 11;
                _context3.t0 = _context3["catch"](6);
                console.log(_context3.t0);

              case 14:
                this.$emit('shareComplete', 'weibo');
                this.logShare({
                  shareTitle: shareTitle,
                  link: link
                });

              case 16:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[6, 11]]);
      }));

      function shareToWeibo() {
        return _shareToWeibo.apply(this, arguments);
      }

      return shareToWeibo;
    }(),
    // 海报发圈
    createPost: function createPost() {
      hdp.execRequest('PluginNavigation', 'createShare');
      this.$emit('shareComplete', 'post');
      this.extraFsEmit();
    },
    drawImage: function () {
      var _drawImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {
        var _this4 = this;

        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                // let promiseDrawImage;
                if (!this.image) {
                  this.showLoading();
                  this.initCanvasConfig().then(function (config) {
                    _this4.config = config;
                    return _this4.$share.drawImg(config);
                  }).then(function (res) {
                    _this4.image = res;

                    if (_this4.$refs.shareImgContainer) {
                      _this4.containerHeight = _this4.$refs.shareImgContainer.offsetHeight;
                    }
                  })["catch"](function (err) {
                    logError(err);
                    toast(err.message);

                    _this4.$emit('input', false);
                  })["finally"](function () {
                    _this4.$emit('drawEnd', _this4.image);

                    _this4.progressCloseLoading();
                  });
                }

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function drawImage() {
        return _drawImage.apply(this, arguments);
      }

      return drawImage;
    }(),
    // /api/notify/itemShortUrl/getItemShortUrl
    getShortChain: function () {
      var _getShortChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {
        var _this5 = this;

        return _regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return _getShortChain(this.cntShareObj).then(function (res) {
                  _this5.shareLinkShort = res;
                })["catch"](this.$logError);

              case 2:
                this.progressCloseLoading();

              case 3:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function getShortChain() {
        return _getShortChain2.apply(this, arguments);
      }

      return getShortChain;
    }(),
    showLoading: function showLoading() {
      if (!this.isShowLoading) {
        this.$loadingToast.show();
        this.isShowLoading = true;
      }
    },
    progressCloseLoading: function progressCloseLoading() {
      this.progress++; // console.log('progressCloseLoading', this.progress);

      if (this.progress >= 2 && this.isShowLoading) {
        this.$loadingToast.close();
        this.isShowLoading = false;
        this.isCreated = false;
      }
    },
    processToWechatMiniProgram: function () {
      var _processToWechatMiniProgram = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {
        var shareObj, config, canTailoring, imgUrl, shareInfo, extraParams, shareExtra, shareTaskType;
        return _regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this.$loadingToast.show();
                shareObj = this.cntShareObj;
                _context6.t0 = this.config;

                if (_context6.t0) {
                  _context6.next = 7;
                  break;
                }

                _context6.next = 6;
                return this.initCanvasConfig();

              case 6:
                _context6.t0 = _context6.sent;

              case 7:
                config = _context6.t0;
                this.config = config;
                config.copyData = shareObj.link;
                canTailoring = shareObj.imgUrl.indexOf('cdn.wanwudezhi') > -1 && !(ua.isIOSApp() && shareObj.imgUrl.indexOf('vframe') > -1);
                imgUrl = canTailoring ? this.getRectangleImage(shareObj.imgUrl, {
                  cut: true,
                  width: 500,
                  height: 400
                }) : shareObj.imgUrl;
                shareInfo = {
                  path: '/pages' + shareObj.page + '?' + shareObj.queryStr,
                  title: shareObj.title,
                  imageUrl: imgUrl
                };
                this.popupInput(false);
                this.$loadingToast.close();
                extraParams = this.extraParams || {};
                shareExtra = extraParams.shareExtra || {};
                shareTaskType = shareExtra.shareTaskType || '';
                this.$location.push(fn.stringifyUrl('/webview/share', {
                  shareInfo: JSON.stringify(shareInfo),
                  config: JSON.stringify(config),
                  shareTaskType: shareTaskType
                }));

              case 19:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function processToWechatMiniProgram() {
        return _processToWechatMiniProgram.apply(this, arguments);
      }

      return processToWechatMiniProgram;
    }(),
    checkIsProcessToWechatMiniProgram: function checkIsProcessToWechatMiniProgram() {
      var xcxVersion = fn.getQueryString('xcxVersion');
      return ua.isWechatMiniProgram() && xcxVersion && fn.compareVersion(xcxVersion, '2.0.62') >= 0;
    },
    genShareLink: function genShareLink(_ref3) {
      var shareTitle = _ref3.shareTitle,
          needTitle = _ref3.needTitle,
          _short = _ref3["short"];
      var link = fn.setQueryString(_short ? this.shareLinkShort : this.cntShareObj.link, 'shareTitle', shareTitle);
      var text = "".concat(this.cntShareObj.title, "\r\n").concat(link);

      if (needTitle) {
        return text;
      } else {
        return link;
      }
    }
  }
};
var getShortChainCache = {};

function _getShortChain(_x2) {
  return _getShortChain3.apply(this, arguments);
}

function _getShortChain3() {
  _getShortChain3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref4) {
    var link, realLink, key;
    return _regeneratorRuntime.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            link = _ref4.link, realLink = _ref4.realLink;
            key = realLink || link;

            if (!getShortChainCache[key]) {
              getShortChainCache[key] = request.post('/api/notify/itemShortUrl/getShortUrl', {
                url: link,
                userId: User.getUserInfo().userId
              })["catch"](function (err) {
                delete getShortChainCache[key];
                return Promise.reject(err);
              });
            }

            return _context7.abrupt("return", getShortChainCache[key]);

          case 4:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _getShortChain3.apply(this, arguments);
}

var __vue_script__ = script;
/* template */

var __vue_render__ = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _vm.isShow ? _c('div', {
    staticClass: "shareDialog component__shareDialog"
  }, [_c('popup', {
    staticClass: "share-popup",
    attrs: {
      "position": "bottom",
      "overlay": _vm.overlay,
      "wapper-class": "flex f-fd-c f-jc-fe",
      "slot-style": {
        height: '100%'
      }
    },
    on: {
      "closed": _vm.onClosed
    },
    model: {
      value: _vm.value,
      callback: function callback($$v) {
        _vm.value = $$v;
      },
      expression: "value"
    }
  }, [_c('div', {
    ref: "shareImgContainer",
    staticClass: "shareImgContainer flex f-fd-c f-ai-c f-jc-c f-fg-1",
    on: {
      "click": function click($event) {
        return _vm.popupInput(false);
      }
    }
  }, [_vm._t("mask"), _vm._v(" "), _vm.image && _vm.showTopShareImg ? _c('img', {
    directives: [{
      name: "lazy",
      rawName: "v-lazy:[config]",
      value: _vm.image,
      expression: "image",
      arg: _vm.config
    }],
    staticClass: "shareImg f-fs-0",
    style: Object.assign({}, {
      opacity: _vm.isHide ? 0 : 1,
      width: _vm.imageWitdh ? _vm.imageWitdh / 100 + 'rem' : '',
      maxHeight: _vm.containerHeight ? _vm.containerHeight * 0.9 + 'px' : ''
    }, _vm.shareImgStyle)
  }) : _vm._e()], 2), _vm._v(" "), _c('div', {
    staticClass: "wrapper f-fs-0"
  }, [_vm._t("shareTip", [_vm.showTip ? _c('div', {
    staticClass: "tip__wrap"
  }, [_c('img', {
    directives: [{
      name: "lazy",
      rawName: "v-lazy:[tipImg]",
      value: _vm.tipImg && _vm.tipImg.url,
      expression: "tipImg && tipImg.url",
      arg: _vm.tipImg
    }],
    staticClass: "tipImg"
  }), _vm._v(" "), _c('div', {
    staticClass: "tipText"
  }, [_vm._v("\n                        " + _vm._s(_vm.tipText) + "\n                    ")])]) : _vm._e()]), _vm._v(" "), _c('div', {
    staticClass: "btnWrapper__wrap"
  }, [_vm.image && !_vm.isApp ? _c('div', {
    staticClass: "download__tip"
  }, [_vm._v("\n                    长按上方图片保存或发送给朋友\n                ")]) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "btnWrapper flex f-ai-c f-fw-w",
    "class": _vm.shareBtnClass
  }, [_vm._l(_vm.btnListObj, function (item, key, index) {
    return [_vm.showBtn[key] ? _c('div', {
      key: "" + key + index,
      staticClass: "btn__item",
      on: {
        "click": function click($event) {
          return item.method(_vm.showBtn[key]);
        }
      }
    }, [_c('img', {
      directives: [{
        name: "lazy",
        rawName: "v-lazy",
        value: item.icon,
        expression: "item.icon"
      }],
      staticClass: "btn__item--icon"
    }), _vm._v(" "), _c('div', {
      staticClass: "btn__item--text"
    }, [_vm._v("\n                                " + _vm._s(item.text) + "\n                            ")])]) : _vm._e()];
  })], 2)])], 2), _vm._v(" "), _vm.isIphoneX ? _c('Occupying', {
    staticClass: "Occupying",
    attrs: {
      "height": 56,
      "bg-color": "#F6F7F8"
    }
  }) : _vm._e()], 1), _vm._v(" "), _vm.value ? _c('Dialog', {
    staticClass: "Dialog",
    attrs: {
      "overlay": false,
      "width": 590,
      "offset-top": 100
    },
    model: {
      value: _vm.showDialog,
      callback: function callback($$v) {
        _vm.showDialog = $$v;
      },
      expression: "showDialog"
    }
  }, [_c('div', {
    staticClass: "Dialog__title",
    attrs: {
      "slot": "title"
    },
    slot: "title"
  }, [_vm._v("\n            " + _vm._s(_vm.dialogTitle) + "\n        ")]), _vm._v(" "), _c('div', {
    staticClass: "Dialog__content"
  }, [_c('img', {
    directives: [{
      name: "lazy",
      rawName: "v-lazy",
      value: _vm.dialogImg,
      expression: "dialogImg"
    }],
    staticClass: "Dialog__content--img"
  })])]) : _vm._e()], 1) : _vm._e();
};

var __vue_staticRenderFns__ = [];
/* style */

var __vue_inject_styles__ = function __vue_inject_styles__(inject) {
  if (!inject) return;
  inject("data-v-7fc2213d_0", {
    source: ".component__shareDialog .Dialog__title[data-v-7fc2213d]{font-size:.28rem;font-weight:500;color:#1e1e1e;line-height:.4rem;padding:0 .4rem}.component__shareDialog .Dialog__content[data-v-7fc2213d]{padding:.5rem .6rem .42rem}.component__shareDialog .Dialog__content--img[data-v-7fc2213d]{width:4.7rem;display:block}.component__shareDialog .share-popup[data-v-7fc2213d]{height:100%}.component__shareDialog .shareImgContainer[data-v-7fc2213d]{max-height:100%}.component__shareDialog .shareImg[data-v-7fc2213d]{max-width:5.8rem;display:block}.component__shareDialog .shareImg__toast[data-v-7fc2213d]{margin-bottom:.1rem}.component__shareDialog .shareImg__toast--icon[data-v-7fc2213d]{max-width:4.9rem;display:block}.component__shareDialog .tip__wrap[data-v-7fc2213d]{width:100%;height:.8rem;position:relative}.component__shareDialog .tip__wrap .tipImg[data-v-7fc2213d]{width:100%;height:.8rem;display:block;-o-object-fit:cover;object-fit:cover}.component__shareDialog .tip__wrap .tipText[data-v-7fc2213d]{position:absolute;top:0;left:0;right:0;height:.8rem;line-height:.8rem;text-align:center;font-size:.3rem;color:#fff;font-weight:500;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.component__shareDialog .btnWrapper__wrap[data-v-7fc2213d]{background-color:#f6f7f8}.component__shareDialog .btnWrapper__wrap .download__tip[data-v-7fc2213d]{position:relative;top:.16rem;font-size:.26rem;color:#63666c;text-align:center}.component__shareDialog .btnWrapper[data-v-7fc2213d]{width:7.5rem;height:2rem;background:#f6f7f8}.component__shareDialog .btnWrapper .btn__item--icon[data-v-7fc2213d]{width:.8rem;height:.8rem;display:block;margin:0 auto}.component__shareDialog .btnWrapper .btn__item--text[data-v-7fc2213d]{font-size:.24rem;font-weight:400;color:#0f0f0f;margin-top:.14rem;text-align:center}.component__shareDialog .btnItemGreater4[data-v-7fc2213d]{height:4rem;flex-flow:row wrap}.component__shareDialog .btnItemGreater4 .btn__item[data-v-7fc2213d]{width:25%}.component__shareDialog .btnItemLess4[data-v-7fc2213d]{height:2rem;justify-content:space-around}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


var __vue_scope_id__ = "data-v-7fc2213d";
/* module identifier */

var __vue_module_identifier__ = undefined;
/* functional template */

var __vue_is_functional_template__ = false;
/* style inject SSR */

/* style inject shadow dom */

var __vue_component__ = /*#__PURE__*/normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, createInjector, undefined, undefined);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var ShareDialogConstructor = Vue.extend(__vue_component__);
var instance;
var cacheEvents;
var defaultProps = getdefault(__vue_component__);
defaultProps.showTopShareImg = true; // delete defaultProps.initCanvasConfig;

/**
 * @class ShareDialog
 * js调用分享弹窗类
 */

var ShareDialog = /*#__PURE__*/function () {
  function ShareDialog() {
    _classCallCheck(this, ShareDialog);
  }

  _createClass(ShareDialog, [{
    key: "showShare",
    value:
    /**
     * js调用分享弹窗 shareDialog
     * @param {Object} options options可以直接是shareDialog的props，也可以是{props,events}的结构
     * @param {Object} options.props shareDialog组件的props
     * @param {Object} options.events shareDialog组件的events
     */
    function showShare(options) {
      if (!instance) {
        instance = new ShareDialogConstructor().$mount();
        document.body.appendChild(instance.$el);
        instance.$on('input', function (val) {
          if (instance) {
            instance.value = val;
          }
        });
        instance.$on('closed', function () {
          if (instance) {
            setTimeout(function () {
              vmUnbindEvents(instance, cacheEvents);
              cacheEvents = null;
            }, 0);
          }
        });
      }

      Object.assign(instance, defaultProps);

      if (options) {
        // 兼容shareBtn数据，xxx版本前为Object，xxx版本后传对应key
        if (options.props) {
          var _options$props$showBt = options.props.showBtn,
              showBtn = _options$props$showBt === void 0 ? {} : _options$props$showBt;

          if (Array.isArray(showBtn)) {
            var showBtnObj = {};
            Object.keys(instance.showBtn).map(function (key, index) {
              if (showBtn[index] !== undefined) {
                showBtnObj[key] = showBtn[index];
              } else {
                showBtnObj[key] = instance.showBtn[key];
              }
            });
            showBtnObj['saveImg'] = ua.isApp();
            options.props.showBtn = showBtnObj;
          }

          Object.assign(instance, options.props);
        } else {
          Object.assign(instance, options);
        } // 订阅事件


        if (options.events) {
          cacheEvents = options.events;
          vmBindEvents(instance, cacheEvents);
        }
      }

      instance.value = true;
    }
    /**
     * 关闭分享弹窗
     */

  }, {
    key: "close",
    value: function close() {
      if (instance) {
        instance.value = false;
      }
    }
    /**
     * 删除分享弹窗组件实例和dom节点
     */

  }, {
    key: "remove",
    value: function remove() {
      if (instance) {
        var parent = instance.$el.parentNode;

        if (parent) {
          parent.removeChild(instance.$el);
        }

        instance.$destroy();
      }

      instance = null;
    }
    /**
     * 绘制分享海报
     * @param {Object} config 画图配置
     * @param {Object} config.canvasConfig canvas2image配置 文档查询：http://npm.wanwudezhi.com/package/@wanwu/canvas2image
     * @param {number} config.width canvas画布宽度
     * @param {number} config.height canvas画布高度
     * @returns {Promise<string>}
     */

  }, {
    key: "drawImg",
    value: function drawImg(config) {
      return drawImage(config);
    }
    /**
     * 保存图片
     * @param {string} image 图片地址或base64
     * @returns {Promise}
     */

  }, {
    key: "downloadImageByHdp",
    value: function downloadImageByHdp(image) {
      return hdp.exec('PluginShare', 'photoSave', {
        imageData: image
      });
    }
    /**
     * js调用分享弹窗 shareDialog(旧方法不推荐使用)
     * @param {Function} initCanvasConfig canvas图片配置函数，返回Promise对象
     * @param {Object|Number} showBtn 底部操作按钮
     * @param {boolean} showTopShareImg 顶部分享图片
     * @param {Object} shareObj 分现到微信的配置参数
     * @param {Object} events 订阅事件
     * @param {number} imageWitdh 顶部分享图片宽度
     * @param {Object} extraParams 额外的处理参数，通过该组件的$emit暴露出去（这里是为了应对多个弹窗实例缓存的数据不实时问题）
     * @param {boolean} showTip 是否显示引导提示
     * @param {string} tipText 引导提示文案
     */

  }, {
    key: "show",
    value: function show(initCanvasConfig, showBtn, showTopShareImg, shareObj, events, imageWitdh) {
      var extraParams = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};
      var showTip = arguments.length > 7 ? arguments[7] : undefined;
      var tipText = arguments.length > 8 ? arguments[8] : undefined;
      var tipImg = arguments.length > 9 ? arguments[9] : undefined;
      var dialogProps = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : {};

      var userOption = _objectSpread({
        initCanvasConfig: initCanvasConfig,
        showBtn: showBtn,
        showTopShareImg: showTopShareImg,
        shareObj: shareObj,
        imageWitdh: imageWitdh,
        extraParams: extraParams,
        tipText: tipText,
        tipImg: tipImg,
        showTip: showTip
      }, dialogProps);

      Object.keys(userOption).forEach(function (key) {
        var item = userOption[key];

        if (!item && item !== false) {
          delete userOption[key];
        }
      });
      this.showShare({
        props: userOption,
        events: events
      });
    }
  }]);

  return ShareDialog;
}();

var shareDialog = new ShareDialog();

__vue_component__.install = function (Vue) {
  Vue.component(__vue_component__.name, __vue_component__);
  Vue.prototype.$share = shareDialog;
  Vue.prototype.$shareDialog = shareDialog;
  Vue.share = shareDialog;
  Vue.shareDialog = shareDialog;
};

function getdefault(compObj) {
  var Obj = {};
  var props = fn.getObjDeepValue(compObj, 'props');
  props && Object.keys(props).forEach(function (prop) {
    var prorDefault = fn.getObjDeepValue(props, prop + '.default');

    if (fn.typeYalidator.isFunction(prorDefault)) {
      Obj[prop] = prorDefault();
    } else {
      Obj[prop] = prorDefault;
    }
  });
  return Obj;
}

export default __vue_component__;
export { _getShortChain as getShortChain, shareDialog, defaultProps as shareDialogDefaultProps };
