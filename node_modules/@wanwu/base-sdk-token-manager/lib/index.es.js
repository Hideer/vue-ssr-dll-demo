import 'core-js/modules/es.array.index-of';
import 'core-js/modules/es.array.join';
import 'core-js/modules/es.array.slice';
import 'core-js/modules/es.regexp.exec';
import 'core-js/modules/es.string.split';
import { ua, fn } from '@wanwu/base-fn';
import { isApiDev } from '@wanwu/env-utils';

var envKey = isApiDev() ? 'dev' : '';
var CookieTokenKey = ua.isWechatMiniProgram() ? '__user_token_mini_program__' : "__user_token_RHu&Zr_".concat(envKey, "_");
var oldTokenKey = '__user_token_1__';
var domain = '.' + (checkip(location.hostname) ? location.hostname : location.hostname.split('.').slice(-2).join('.'));
var expires = 7;
var path = '/';
/**
 *  保存token
 * @param {string} token Wwdz ****
 */

function saveToken(token) {
  // 兼容token存取错误，后面需要删除
  fn.removeCookie(CookieTokenKey, {
    path: path
  });
  fn.setCookie(CookieTokenKey, token, {
    path: path,
    domain: domain,
    expires: expires
  });
  fn.setCookie(oldTokenKey, token, {
    path: path,
    expires: expires
  });
  localStorage.setItem(CookieTokenKey, token);
}
/**
 * 删除token
 */

function removeToken() {
  localStorage.removeItem(CookieTokenKey);
  fn.removeCookie(CookieTokenKey, {
    path: path,
    domain: domain
  });
  fn.removeCookie(oldTokenKey, {
    path: path,
    domain: domain
  });
  fn.removeCookie(oldTokenKey, {
    path: path
  });
}
/**
 * 获取token
 * @param {boolean} getTokenOnUrl 是否从url上获取token（默认只有app环境需要，目前只有九宫配置了固定从URL上获取token）
 */

function getToken(getTokenOnUrl) {
  // 获取用户token值
  var token;
  var tokenCache = fn.getCookie(CookieTokenKey) || fn.getCookie(oldTokenKey) || localStorage.getItem(CookieTokenKey);

  if (ua.isApp() || ua.isWechatMiniProgram() || getTokenOnUrl) {
    token = fn.getQueryString('token') || tokenCache;

    if (token && token.indexOf('Wwdz (null)') !== -1) {
      token = '';
    }
  } else {
    token = tokenCache;
  }

  return token;
}

function checkip(host) {
  var pattern = /^(\d+\.){3}\d+$/;
  var flagIp = pattern.test(host);

  if (!flagIp) {
    return false;
  }

  return true;
}

export { getToken, removeToken, saveToken };
