// Unique ID creation requires a high quality random # generator.  In the
// browser this is a little complicated due to unknown quality of Math.random()
// and inconsistent support for the `crypto` API.  We do the best we can via
// feature-detection

// getRandomValues needs to be invoked in a context where "this" is a Crypto
// implementation. Also, find the complete implementation of crypto on IE11.

const rnds = new Array(16);

export default function mathRNG() {
    for (let i = 0, r; i < 16; i++) {
        // tslint:disable-next-line:no-bitwise
        if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }
        // tslint:disable-next-line:no-bitwise
        rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
    }

    return rnds;
}
