// traceLink 业务追踪相关方法
import config from '../config';
import hash from './hash';
import crossUtil from "./cross";
import { fn, ua } from "@wanwu/base-fn";

const traceUtil = {
    // ext数据处理
    parseTraceData(data) {
        // app内不处理
        if (ua.isApp()) return;
        // 如果追踪动作已发生，进行重置其值
        if (data && data.traceLinkKey) {
            // 获取traceLink
            const traceLink = this.getTraceLink();
            traceLink[data.traceLinkKey] = `${ua.isWechatMiniProgram() ? 'XCX' : 'H5'}.${hash.rand(8)}`;
            this.setTraceLink(traceLink);
        }
    },
    // 获取traceLink
    getTraceLink(): Object {
        try {
            // 获取顺序 window.name => url => config
            let traceLink = crossUtil.getWindowNameItem('traceLink');
            if (traceLink) return traceLink;
            // url带参数是因为小程序池子不互通
            if (fn.getQueryString('traceLink')) {
                traceLink = JSON.parse(fn.getQueryString('traceLink'));
                // 补充到window.name
                crossUtil.setWindowName({ traceLink });
                return traceLink;
            }
            traceLink = config.traceLink;
            // 初次赋值需要加入url 和 window.name中
            crossUtil.setWindowName({ traceLink });
            return traceLink;
        } catch (err) {
            console.log(err);
            return config.traceLink;
        }
    },
    // 修改traceLink
    setTraceLink(traceLink: {}) {
        crossUtil.setWindowName({ traceLink });
        history.replaceState(null, null, fn.setQueryString(document.URL, 'traceLink', JSON.stringify(traceLink)));
    }
};

export default traceUtil;
