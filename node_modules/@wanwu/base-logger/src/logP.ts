// 打点相关逻辑
// 暴露logger.logP pageview 打点
import { ua, fn } from '@wanwu/base-fn';
import {LoggerInfoTypes, NewLoggerInfoTypes} from './util/types';
import rtp from './rtp/rtp';
import send from './util/send';
import config from './config';
import pageStayTime from './pageStayTime';
import traceUtil from "./util/trace";
const referAndRtpCnt = [];
// newRtpCnt 通过页面路由meta设置的key动态传入进来
export default function logP(cur, ref, newRtpCnt, popstate) {
     // 在H5中进入下一个logP来进行埋点上报 数据不会丢失
    rtp.setPageStayTimeH5();
     // 统计用户停留时间 重置开始时间
    rtp.setStartTime();
     // 缓存refer与url, 在logE打点的时候去取
    const referAndRtpCntObj = {
        url: cur ? cur : location.href,
        refer: ref || fn.getQueryString("refer", cur) || '',
    };
    referAndRtpCnt.push(referAndRtpCntObj);
    let newLoggerInfo: NewLoggerInfoTypes = rtp.refreshNewRtpInfoData(referAndRtpCntObj.url, referAndRtpCntObj.refer);
    newLoggerInfo.event = 'pageShow';
    // traceLink逻辑
    if (!ua.isApp()) {
        newLoggerInfo.traceLink = traceUtil.getTraceLink();
    }
    // 获取rtpRefer
    let rtpCnt = '', rtpRefer = '';
    // 从app、小程序跳转传rtpRefer 如果不是前进后退就从url获取，否则就从缓存读取
    if (fn.getQueryString('rtpRefer') && popstate === false) {
        rtpRefer = fn.getQueryString('rtpRefer');
        newLoggerInfo.rtpRefer = rtpRefer;
    } else {
        if(rtp.getRtpRefer()) {
        newLoggerInfo.rtpRefer = rtp.getRtpRefer();
        }
    }
    // 设置rtpCnt
    if (newRtpCnt) {
       // 检查观星录入的key与业务中添加的是否一致
       let hasKeyObj = rtp.hashGet(newRtpCnt);
       if (hasKeyObj && !hasKeyObj.hasKey) {
           console.warn(`当前 pageShow 事件您输入rtpCnt值为 ${hasKeyObj.key} 不存在, 请检查观星录入的是否与您添加的一致`);
       }
       // 将page保存起来
       sessionStorage.setItem("page", newRtpCnt);
       // 获取rtpCnt数据
       rtpCnt = rtp.getHashCntOrRefer(newRtpCnt);
        // pageShow（rtpCnt）作为下一次的rtpRefer所以将rtpRefer存储起来
       rtp.resetRtpRefer(rtpCnt);
        // 设置app端返回所需要的rtpRefer
       rtp.setAppRtpReferData(rtpCnt);
       newLoggerInfo.rtpCnt = rtpCnt;
    }
    // 将newLoggerInfo保存到缓存里面，页面上报时用
    rtp.setLoggerInfo(newLoggerInfo);
    // 发送打点数据
    // APP内webview不需要曝光的情况
    const trackFlag = fn.getQueryString('trackFlag', cur);
    if (ua.isApp()) {
        if (!trackFlag) {
            if ((ua.getAppName() === 'wwdz_b2b' && fn.isLargerThanAppVersion("1.1.05")) || fn.isLargerThanAppVersion('2.7.6')) {
                // 新的埋点上报方法
                send.logNewAppEvent(newLoggerInfo);
            }
        }
    } else {
        // 如果在小程序里面不上报
        send.sendNewLog([newLoggerInfo]);
    }
}
export const getReferAndRtpCnt = () => {
    return referAndRtpCnt;
};
