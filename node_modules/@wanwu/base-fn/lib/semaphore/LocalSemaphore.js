"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Canstant_1 = require("./Canstant");
var AbstractSemaphore_1 = require("./AbstractSemaphore");
/**
 * 单实例信号量
 * 用实例变量来维持permits的数量
 */
var LocalSemaphore = /** @class */ (function (_super) {
    tslib_1.__extends(LocalSemaphore, _super);
    function LocalSemaphore(permits, name, fair) {
        if (name === void 0) { name = Canstant_1.DEFAULT_LOCKER_NAME; }
        if (fair === void 0) { fair = false; }
        var _this = _super.call(this, name, fair) || this;
        _this.permits = permits;
        _this.leftPermits = permits;
        return _this;
    }
    LocalSemaphore.prototype.doAcquire = function (permits) {
        if (this.leftPermits >= permits) {
            this.leftPermits = this.leftPermits - permits;
            // @ts-ignore
            return Promise.resolve(true);
        }
        else {
            // @ts-ignore
            return Promise.resolve(false);
        }
    };
    LocalSemaphore.prototype.doRelease = function (permits) {
        this.leftPermits += permits;
        // @ts-ignore
        return Promise.resolve(true);
    };
    return LocalSemaphore;
}(AbstractSemaphore_1.default));
exports.default = LocalSemaphore;
