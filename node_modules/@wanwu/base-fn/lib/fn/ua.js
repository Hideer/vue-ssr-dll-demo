"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isLowVersionDevice = exports.isLowVersionAndroid = exports.isLowVersionIOS = exports.getAndroidSystemVersionString = exports.getIosSystemVersionString = exports.getIosSystemVersion = exports.getAndroidSystemVersion = exports.isWeibo = exports.isQQBrowser = exports.isQQ = exports.isWechatMiniProgram = exports.getAppPlatform = exports.isIPhoneX = exports.getAppVersion = exports.isKuaiShou = exports.isTikTok = exports.isTieba = exports.isWechat = exports.isAndroidApp = exports.isIOSApp = exports.isPC = exports.isAndroid = exports.isIOS = exports.getAppName = exports.isApp = exports.getUserAgent = void 0;
/**
 * Create by changsheng on 2019-04-09 18:37
 */
var config_1 = require("../config");
function getUserAgent() {
    return navigator.userAgent.toLowerCase();
}
exports.getUserAgent = getUserAgent;
function isApp() {
    return getUserAgent().indexOf('wwdz') > -1;
}
exports.isApp = isApp;
/**
 * 用来从UA中获取当前环境的APP
 * @param {string} ua UA字符串，例：mozilla/5.0 (linux; android 11; redmi k30 pro build/rkq1.200826.002; wv) applewebkit/537.36 (khtml, like gecko) version/4.0 chromel 77.0.3865.120 mqqbrowser/6.2 tbs/ 045514 mobile safari/537.36; nettype =1 wwdz_b2b/1.1.01 wwdz/3.6.0 statusbarheight/96
 * @returns { string | undefined} wwdz_b2b标记“收藏集市”，wwdz标记“玩物得志”，undefined标记外app外
 */
function getAppName(ua) {
    if (ua === void 0) { ua = getUserAgent(); }
    if (/wwdz_b2b/.test(ua)) {
        return 'wwdz_b2b';
    }
    else if (/wwdz/.test(ua)) {
        return 'wwdz';
    }
    return undefined;
}
exports.getAppName = getAppName;
var isIOSCache = null;
function isIOS() {
    if (isIOSCache === null) {
        isIOSCache = /iphone|ipad|ipod/.test(getUserAgent());
    }
    return isIOSCache;
}
exports.isIOS = isIOS;
var isAndroidCache = null;
function isAndroid() {
    if (isAndroidCache === null) {
        isAndroidCache = getUserAgent().indexOf('android') > -1;
    }
    return isAndroidCache;
}
exports.isAndroid = isAndroid;
var isPCCache = null;
function isPC() {
    if (isPCCache === null) {
        isPCCache = !/iphone|ipad|ipod|android|blackberry|iemobile|harmonyos/.test(getUserAgent());
    }
    return isPCCache;
}
exports.isPC = isPC;
function isIOSApp() {
    return isIOS() && isApp();
}
exports.isIOSApp = isIOSApp;
function isAndroidApp() {
    return isAndroid() && isApp();
}
exports.isAndroidApp = isAndroidApp;
function isWechat() {
    return getUserAgent().indexOf('micromessenger') > -1;
}
exports.isWechat = isWechat;
function isTieba() {
    return getUserAgent().indexOf('tieba') > -1;
}
exports.isTieba = isTieba;
// 抖音环境判断
function isTikTok() {
    return getUserAgent().indexOf('aweme') > -1;
}
exports.isTikTok = isTikTok;
// 快手环境判断
function isKuaiShou() {
    return getUserAgent().indexOf('KsWebView') > -1;
}
exports.isKuaiShou = isKuaiShou;
function getAppVersion() {
    var reg = /.*wwdz\/(\d+\.\d+\.\d+).*/;
    // 兼容获取收藏集市app的版本号
    try {
        var wanwuConfig = new config_1.default();
        var appVersionReg = wanwuConfig.getConfig('base-fn', 'appVersionReg');
        if (appVersionReg) {
            reg = new RegExp(appVersionReg);
        }
        ;
        // const obj = JSON.parse(sessionStorage.getItem('__GlobalConfig__') || '{}');
        // if (obj.appVersionReg) { reg = new RegExp(obj.appVersionReg); }
    }
    catch (e) { }
    var ua = getUserAgent();
    if (reg.test(ua)) {
        return ua.replace(reg, '$1');
    }
    else {
        return '';
    }
}
exports.getAppVersion = getAppVersion;
function isIPhoneX() {
    var screen = window.screen;
    return isIOS() && ((screen.height == 812 && screen.width == 375) || (screen.height == 896 && screen.width == 414) || (screen.height == 844 && screen.width == 390));
}
exports.isIPhoneX = isIPhoneX;
function getAppPlatform() {
    if (isAndroidApp()) {
        return 'android';
    }
    else if (isIOSApp()) {
        return 'ios';
    }
    else if (isWechatMiniProgram()) {
        return 'xcx';
    }
    else {
        return 'h5';
    }
}
exports.getAppPlatform = getAppPlatform;
function isWechatMiniProgram() {
    return isWechat() && getUserAgent().indexOf('miniprogram') > -1;
}
exports.isWechatMiniProgram = isWechatMiniProgram;
function isQQ() {
    return getUserAgent().indexOf('qq') > -1;
}
exports.isQQ = isQQ;
function isQQBrowser() {
    return getUserAgent().indexOf('mqqbrowser') > -1;
}
exports.isQQBrowser = isQQBrowser;
function isWeibo() {
    return getUserAgent().indexOf('weibo') > -1;
}
exports.isWeibo = isWeibo;
function getAndroidSystemVersion() {
    return getAndroidSystemVersionString() && parseInt(getAndroidSystemVersionString().split('.')[0]);
}
exports.getAndroidSystemVersion = getAndroidSystemVersion;
function getIosSystemVersion() {
    return getIosSystemVersionString() && parseInt(getIosSystemVersionString().split('.')[0]);
}
exports.getIosSystemVersion = getIosSystemVersion;
function getIosSystemVersionString() {
    var reg = /os [\d._]+/ig;
    return isIOS() && getUserAgent().match(reg).toString().replace(/[^0-9|_.]/ig, '').replace(/_/ig, '.');
}
exports.getIosSystemVersionString = getIosSystemVersionString;
function getAndroidSystemVersionString() {
    var reg = /android [\d._]+/ig;
    return isAndroid() && getUserAgent().match(reg).toString().replace(/[^0-9|_.]/ig, '').replace(/_/ig, '.');
}
exports.getAndroidSystemVersionString = getAndroidSystemVersionString;
var isLowVersionIOSCache = null;
function isLowVersionIOS() {
    if (isLowVersionIOSCache === null) {
        isLowVersionIOSCache = getIosSystemVersion() < 11;
    }
    return isLowVersionIOSCache;
}
exports.isLowVersionIOS = isLowVersionIOS;
var isLowVersionAndroidCache = null;
function isLowVersionAndroid() {
    if (isLowVersionAndroidCache === null) {
        isLowVersionAndroidCache = getAndroidSystemVersion() < 9;
    }
    return isLowVersionAndroidCache;
}
exports.isLowVersionAndroid = isLowVersionAndroid;
// 判断低版本设备 (非安卓/IOS系统会返回true)
function isLowVersionDevice() {
    if (isIOS()) {
        return isLowVersionIOS();
    }
    if (isAndroid()) {
        return isLowVersionAndroid();
    }
    return true;
}
exports.isLowVersionDevice = isLowVersionDevice;
