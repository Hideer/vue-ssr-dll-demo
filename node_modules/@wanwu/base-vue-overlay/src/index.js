import comp from './index.vue';
import Vue from 'vue';
import {
    vmBindEvents, vmUnbindEvents,
} from '@wanwu/event-utils';
// const install = (Vue) => {
const OverlayConstructor = Vue.extend(comp);
const defaultOptions = {
    overlayStyle: null,
    onClick: null,
};
let cacheEvents;
class Overlay {
    constructor(options) {
        const instance = new OverlayConstructor().$mount();
        document.body.appendChild(instance.$el);
        instance.$on('input', (val) => {
            instance.value = val;
        });
        instance.$on('closed', () => {
            vmUnbindEvents(this.instance, cacheEvents);
            cacheEvents = null;
            this.remove();
        });
        this.instance = instance;
        Object.assign(this.instance, defaultOptions);
        if (options instanceof Object) {
            if (options.props) {
                Object.assign(this.instance, options.props);
            } else {
                Object.assign(this.instance, options);
            }
            if (options.events) {
                cacheEvents = options.events;
                vmBindEvents(this.instance, cacheEvents);
            }
        } else if (options) {
            console.error('overlay参数仅支持对象，请传入正确的参数');
        }
    }

    show() {
        if (this.instance) {
            this.instance.value = true;
        }
    }

    close() {
        if (this.instance) {
            this.instance.value = false;
        }
    }

    remove() {
        if (this.instance) {
            const parent = this.instance.$el.parentNode;
            if (parent) {
                parent.removeChild(this.instance.$el);
            }

            this.instance.$destroy();
        }
    }
}

comp.install = (Vue) => {
    Vue.component(comp.name, comp);
    Vue.prototype.$overlay = Overlay;
    Vue.overlay = Overlay;
};
export {
    Overlay,
};
export default comp;
