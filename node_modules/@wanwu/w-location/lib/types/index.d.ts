export { throughParams };
export default wLocation;
declare namespace wLocation {
    const router: any;
    const timeKey: string;
    const historyKey: string;
    const errorCallback: any;
    const whiteOriginReg: any;
    const catBaseReg: RegExp;
    function push(path: any, options?: {}): Promise<any>;
    function push(path: any, options?: {}): Promise<any>;
    function replace(path: any, options?: {}): Promise<any>;
    function replace(path: any, options?: {}): Promise<any>;
    function go(n: any): Promise<any>;
    function go(n: any): Promise<any>;
    function back(): Promise<any>;
    function back(): Promise<any>;
    function forward(): Promise<any>;
    function forward(): Promise<any>;
    /**
     *  window.history.pushState的封装，方便返回确认
     * @param {Object} state
     * @param {null} title
     * @param {String} url
     */
    function pushState(url: string, state: any): void;
    /**
     *  window.history.pushState的封装，方便返回确认
     * @param {Object} state
     * @param {null} title
     * @param {String} url
     */
    function pushState(url: string, state: any): void;
    /**
     *  window.history.replaceState的封装，不影响vue router
     * @param {String} url
     */
    function replaceState(url: string): void;
    /**
     *  window.history.replaceState的封装，不影响vue router
     * @param {String} url
     */
    function replaceState(url: string): void;
    function use(plugin: any): void;
    function use(plugin: any): void;
    /**
     * 添加生命周期函数
     * @param {(to,form)=>void} lifecycle
     */
    function beforeNavigate(lifecycle: (to: any, form: any) => void): void;
    /**
     * 添加生命周期函数
     * @param {(to,form)=>void} lifecycle
     */
    function beforeNavigate(lifecycle: (to: any, form: any) => void): void;
    function setConfig(options: any): void;
    function setConfig(options: any): void;
    function install(Vue: any, options: any): void;
    function install(Vue: any, options: any): void;
}
