const webpack = require('webpack');

const packages = require('./dll-packages.json');
const devManifest = require('../dll-sources/manifest.dev.json');
const prodManifest = require('../dll-sources/manifest.prod.json');

let info;
try {
    info = require('../dll-sources/info.json');
} catch (err) {
    // console.error(err);
    console.warn(
        `info.json not found, guess it's local development, using local files`,
    );
    const pkg = require('../package.json');
    info = {
        version: pkg.version,
        runtimeDevUrl: '/dll-sources/runtime.dev.js',
        runtimeProdUrl: '/dll-sources/runtime.prod.js',
        runtimeCssUrl: '/dll-sources/style.css',
    };
}

const {
    devManifest: libDevManifest,
    prodManifest: libProdManifest,
    // manifest: libManifest,
    info: libInfo,
} = require('@wanwu/nine-external-lib');

exports.modules = Object.keys(packages);

exports.devManifest = devManifest;
exports.prodManifest = prodManifest;
exports.info = info;

exports.injectDllPlugins = function(
    config,
    context = process.cwd(),
    isDev = false,
) {
    const plugins = config.plugins || [];
    plugins.push(
        new webpack.DllReferencePlugin({
            manifest: isDev ? libDevManifest : libProdManifest,
            context,
        }),
        new webpack.DllReferencePlugin({
            manifest: isDev ? devManifest : prodManifest,
            context,
        }),
    );
    config.plugins = plugins;
    return config;
};

exports.sources = {
    scripts: [libInfo.externalsProdUrl, info.runtimeProdUrl],
    styles: [info.runtimeCssUrl],
};

exports.devSources = {
    scripts: [libInfo.externalsDevUrl, info.runtimeDevUrl],
    styles: [info.runtimeCssUrl],
};
