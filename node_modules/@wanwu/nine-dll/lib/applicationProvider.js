import option from './kl-local/kunlun/option';
import { ua } from '@wanwu/base-fn';
import hdp from '@wanwu/hdp';
import { setPageScroll } from '@wanwu/scroll-utils';
export default function createAppProviderMixin() {
  // if (!configKey) throw new Error('configKey required');
  return {
    data: function data() {
      return {
        appProviderData: {
          showControlMap: {}
        }
      };
    },
    provide: function provide() {
      var self = this;
      return {
        appContext__: {
          triggerAction: function triggerAction(_ref) {
            var type = _ref.type,
                options = _ref.options;
            var actionStr = "".concat(type, "Action__");

            if (!self[actionStr]) {
              console.error("action type of ".concat(type, " not exist"));
              return;
            }

            self[actionStr](options);
          },
          appConfig: this.appProviderData
        }
      };
    },
    methods: {
      // 跳转链接
      redirectAction__: function redirectAction__(options) {
        if (options.url) {
          var reg = /redirect/g;

          if (reg.test(options.url)) {
            location.href = options.url;
          } else {
            this.$location.push(options.url);
          }
        } // this.$location.push(options.url);

      },
      // 返回上级页面
      backAction__: function backAction__() {
        if (document.referrer) {
          window.history.back();
        } else {
          if (ua.isApp()) hdp.exec('PluginNavigation', 'pageFinish');
        }
      },
      // 分享
      shareAction__: function shareAction__() {
        window.commonShareClick();
      },
      // 回到顶部
      topAction__: function topAction__() {
        setPageScroll(0, 0);
      },
      // modal显示隐藏
      modalAction__: function modalAction__(options) {
        this.$set(this.appProviderData.showControlMap, options.modal, option.action === 'close' ? false : // : option.action === 'open'
        true // : // TODO: 这里需要判断默认是否显示，如果默认隐藏
        //   // 初次设置的时候应该根据值是否是`undefined`来设置
        //   !this.appProviderData.showControlMap.modal,
        );
      },
      // 控制组件显示隐藏
      showComponentAction__: function showComponentAction__(options) {
        this.$set(this.appProviderData.showControlMap, options.component, options.action === 'close' ? false : // : option.action === 'open'
        true // : // TODO: 这里需要判断默认是否显示，如果默认隐藏
        //   // 初次设置的时候应该根据值是否是`undefined`来设置
        //   !this.appProviderData.showControlMap.modal,
        );
      },
      // 页面滚动到某个组件的开始位置
      jumpAction__: function jumpAction__(options) {
        if (!options.component) return; // document.getElementById(options.component) && document.getElementById(options.component).scrollIntoView({ behavior: "smooth", block: "start", inline: "nearest" });
        // console.log(options.action === 'jumpComponent')

        var top = document.getElementById(options.component).getBoundingClientRect().top - (window.appHeaderHeight * window.computedRem || 0);
        window.scrollTo({
          top: top,
          behavior: 'smooth'
        });
      }
    }
  };
}